m4_define([MAJOR], 0)
m4_define([MINOR], 9)
m4_define([MICRO], 5)

dnl Process this file with autoconf to produce a configure script.
AC_INIT([xbmc-addon-xvdr], [MAJOR.MINOR.MICRO], [alexander.pipelka@gmail.com])

AC_CONFIG_AUX_DIR(autotools)
AC_PREFIX_DEFAULT(/usr/lib/xbmc)

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl Setup for automake
AM_INIT_AUTOMAKE

dnl Check for tools

AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_INSTALL
AC_EXEEXT

dnl Check for zlib
zlib_found=yes
ZLIB_LIBS=
AC_CHECK_HEADER(zlib.h,,[zlib_found="no"])
if test x$zlib_found = xyes; then
        AC_SEARCH_LIBS(compress, z, [AC_DEFINE([HAVE_ZLIB], 1, [haev zlib compression library installed])])
        ZLIB_LIBS="-lz"
        AC_SUBST(ZLIB_LIBS)
fi

AC_SUBST(VERSIONEXT)

case $host in
  i*86*-linux-gnu*)
     ARCH="i486-linux"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX")
     ;;
  x86_64-*-linux-gnu*)
     ARCH="x86_64-linux"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX")
     ;;
  arm-apple-darwin*)
     use_joystick=no
     use_neon=yes
     use_libcec=no
     use_crystalhd=no
     use_vdadecoder=no
     use_vtbdecoder=yes
     use_optical_drive=no
     use_dvdcss=no
     use_gles=yes
     use_cpu=cortex-a8
     check_sdl_arch=[`file /opt/local/lib/libSDL_image.dylib | awk '{V=7; print $V}'`]
     if test "x$check_sdl_arch" = "xi386"; then
       use_texturepacker_native=yes
       USE_TEXTUREPACKER_NATIVE_ROOT="/opt/local"
     else
       use_texturepacker=no
     fi
     ARCH="arm-osx"
     use_arch="arm"
     AC_SUBST(ARCH_DEFINES, "-D_ARMEL")
     PYTHON_VERSION="2.6"
     PYTHON_LDFLAGS="-L${prefix}/lib -lpython2.6"
     PYTHON_CPPFLAGS="-I${prefix}/include/python2.6"
     PYTHON_SITE_PKG="${prefix}/lib/python2.6/site-packages"
     PYTHON_NOVERSIONCHECK="no-check"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_DARWIN -DTARGET_DARWIN_IOS -D_LINUX")
     ;;
  *86-apple-darwin*)
     use_joystick=no
     use_vtbdecoder=no
     use_texturepacker_native=yes
     USE_TEXTUREPACKER_NATIVE_ROOT="$prefix"
     ARCH="x86-osx"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_DARWIN -DTARGET_DARWIN_OSX -D_LINUX")
     ;;
  powerpc-apple-darwin*)
     use_joystick=no
     use_vdadecoder=no
     use_vtbdecoder=no
     use_crystalhd=no
     ARCH="powerpc-osx"
     use_arch="ppc"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_DARWIN -DTARGET_DARWIN_OSX -D_LINUX")
     ;;
  powerpc-*-linux-gnu*)
     ARCH="powerpc-linux"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_POWERPC")
     ;;
  powerpc64-*-linux-gnu*)
     ARCH="powerpc64-linux"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_POWERPC64")
     ;;
  arm*-*-linux-gnu*)
     use_texturepacker=no
     ARCH="arm"
     use_arch="arm"
     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_ARMEL")
     ;;
  *)
     AC_MSG_ERROR(unsupported host ($host))
esac
AC_SUBST([ARCH])

# Finally create all the generated files
AC_OUTPUT([
Makefile
addons/Makefile
addons/pvr.vdr.xvdr/Makefile
addons/pvr.vdr.xvdr/addon.xml
addons/repository.xvdr/Makefile
addons/repository.xvdr64/Makefile
data/addons.xml
data/Makefile
src/Makefile
src/libTcpSocket/Makefile
src/xvdr/Makefile
])
